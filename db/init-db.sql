DO $$ BEGIN

RAISE NOTICE 'Creating table "users"...';
create table users (
    user_id bigint generated by default as identity not null,
    public_id uuid not null,
    email_address varchar(255) not null,
    password_hash varchar(100) not null,
    user_status smallint not null,
    constraint pk_users primary key (user_id)
);

create index idx_users_public_id on users (public_id);
create index idx_users_email_address on users (email_address, user_status);

RAISE NOTICE 'Creating table "user_activation"...';
create table user_activation (
    user_id bigint not null,
    activation_ticket varchar(50) not null,
    constraint PK_user_activation primary key (user_id)
);

RAISE NOTICE 'Creating table "short_urls"...';
create table short_urls (
    short_url_id bigint not null,
    user_id bigint not null,
    full_url varchar(2000) not null,
    short_url varchar(50) null,
    constraint pk_short_urls primary key (short_url_id)
);

create unique index uniq_short_urls_short_url on short_urls (short_url);

create index idx_short_urls_user_id on short_urls (user_id);

RAISE NOTICE 'Creating sequence short_url_seq';
create sequence if not exists short_url_seq
    as bigint
    increment by 1
    minvalue 20000000
    start with 20000000;


RAISE NOTICE 'Creating last_known_ips';
create table last_known_ips (
    user_id bigint not null,
    IP_Address inet not null,
    recorded_at timestamp with time zone not null,
    last_used timestamp with time zone not null,
    constraint pk_last_known_ips primary key (user_id, IP_Address)
);

RAISE NOTICE 'Creating audit_log';
create table audit_log (
    user_id bigint not null,
    IP_Address inet not null,
    event_id int not null,
    description varchar(500) null,
    recorded_at timestamp
)
partition by range(recorded_at);

create index idx_audit_log_user_id_recorded_at on audit_log (user_id, recorded_at);

DECLARE
    start_date DATE := '2025-01-01';
    end_date DATE := '2025-12-31';
    partition_start DATE;
    partition_end DATE;
    partition_name TEXT;
BEGIN
    partition_start := start_date;
    WHILE partition_start < end_date LOOP
        partition_end := partition_start + INTERVAL '1 month';
        partition_name := FORMAT('audit_log_%s', TO_CHAR(partition_start, 'YYYY_MM'));
        
        EXECUTE FORMAT(
            'CREATE TABLE %I PARTITION OF audit_log FOR VALUES FROM (%L) TO (%L)',
            partition_name, partition_start, partition_end
        );
        
        partition_start := partition_end;
    END LOOP;
END;


create table lt_audit_log_events (
    event_id int not null,
    name varchar(50) not null
);

insert into lt_audit_log_events (event_id, name) 
values 
    (1, 'REGISTRATION'),
    (2, 'EMAIL_ACTIVATION'),
    (3, 'LOGIN'),
    (4, 'LOGOUT'),
    (10, 'CREATE_SHORT_URL'),
    (11, 'CREATE_CUSTOM_SHORT_URL'),
    (12, 'DELETE_SHORTENED_URL');

END $$;

